summarize_each(sort())
depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
select(genotype, month, time_point, measured_value, measurement, individual_plant_metadata)%>%
pivot_wider(names_from = month, values_from = measured_value)%>%
select(Dec, Feb, Jan)%>%
na.rm()
depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
select(genotype, month, time_point, measured_value, measurement, individual_plant_metadata)%>%
pivot_wider(names_from = month, values_from = measured_value)%>%
select(Dec, Feb, Jan)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(formatR)
knitr::opts_chunk$set(message=FALSE, echo = TRUE, warning = FALSE, dev = "cairo_pdf",
tidy.opts=list(width.cutoff=40),tidy=TRUE, cache = TRUE)
options(tinytex.verbose = TRUE)
library(dplyr)
library(tidyverse)
library(reshape2)
library(ggthemes)
library(extrafont)
add_day_col <- function(df){
df$time_point <- as.numeric(df$time_point)
out <- df%>%
mutate(day = case_when(
(df$time_point < 24)~ "1",
(df$time_point >= 24 & df$time_point < 48)~ '2',
(df$time_point >= 48 & df$time_point < 72)~ '3',
(df$time_point >= 72 & df$time_point < 96)~ '4',
(df$time_point >= 96 & df$time_point < 120)~ '5',
(df$time_point >= 120 & df$time_point < 144)~ '6',
(df$time_point >= 144 & df$time_point < 168)~ '7',
(df$time_point >= 168 & df$time_point < 192)~ '8',
(df$time_point >= 192 & df$time_point < 216)~ '9',
(df$time_point >= 216 & df$time_point < 240)~ '10',
(df$time_point >= 240 & df$time_point < 264)~ '11',
(df$time_point >= 264 & df$time_point < 288)~ '12',
(df$time_point >= 288 & df$time_point < 312)~ '13',
(df$time_point >= 312 & df$time_point < 336)~ '14',
(df$time_point >= 336 & df$time_point < 360)~ '15',
(df$time_point >= 360 & df$time_point < 384)~ '16',
(df$time_point >= 384 & df$time_point < 408)~ '17',
(df$time_point >= 408 & df$time_point < 432)~ '18',
(df$time_point >= 432 & df$time_point < 456)~ '19',
(df$time_point >= 456 & df$time_point < 480)~ '20',
(df$time_point >= 480 & df$time_point < 504)~ '21',
(df$time_point >= 504 & df$time_point < 528)~ '22',
(df$time_point >= 528 & df$time_point < 552)~ '23',
(df$time_point >= 552 & df$time_point < 576)~ '24',
(df$time_point >= 576 & df$time_point < 600)~ '25'
))
out$day <- as.integer(out$day)
return(out)}
###Read in the data
depi_jan <-read.table("DEPI_Jan_Seeger_Final.txt", sep = ",", header = FALSE, stringsAsFactors = FALSE)
depi_dec_feb <-read.table("DEPI_analysis_Seeger.txt", sep = ",", header = FALSE, stringsAsFactors = FALSE)
###Add column names
names(depi_jan) <- c("measurement_ID", "plant_ID", "DEPI_ID", "time_point", "measured_value", "light_regimen", "measurement", "individual_plant_metadata", "genotype", "line", "subline", "full_subline_information", "experiment_number", "flat_number","cell_number", "row_number", "column_number", "border", "treatment")
names(depi_dec_feb) <- c("individual_plant_metadata", "genotype", "line", "subline", "border", "flat_number", "measurement_ID", "plant_ID", "measurement", "time_point", "measured_value")
###Select only the columns that we need and add a column with the month
dec_data <- depi_dec_feb%>%
filter(!genotype %in% c("b1", "b3", "b1b3", "ftsz2-1", "ftsz2-2", "ftsz-dbl", "Col0")|(genotype == "Col0"&subline == "1"))%>%
filter(substr(plant_ID, 1,4) == "1217")%>%
filter(border == FALSE)%>%
select(individual_plant_metadata, genotype, flat_number, measurement, time_point, measured_value, border, subline)%>%
mutate(month = "Dec")
jan_data <- depi_jan%>%
filter(!genotype %in% c("b1", "b3", "b1b3", "ftsz2-1", "ftsz2-2", "ftsz-dbl", "Col0")|(genotype == "Col0"&subline == "1"))%>%
filter(border == FALSE)%>%
select(individual_plant_metadata, genotype, flat_number, measurement, time_point, measured_value, border, subline)%>%
mutate(month = "Jan")
feb_data <- depi_dec_feb%>%
filter(!genotype %in% c("b1", "b3", "b1b3", "ftsz2-1", "ftsz2-2", "ftsz-dbl", "Col0")|(genotype == "Col0"&subline == "1"))%>%
filter(border == FALSE)%>%
filter(substr(plant_ID, 1,4) == "0218")%>%
select(individual_plant_metadata, genotype, flat_number, measurement, time_point, measured_value, border, subline)%>%
mutate(month = "Feb")
dec_data$time_point <- as.numeric(gsub("X","", dec_data$time_point))
feb_data$time_point <- as.numeric(gsub("X","", feb_data$time_point))
dec_data <- add_day_col(dec_data)
jan_data <- add_day_col(jan_data)
feb_data <- add_day_col(feb_data)
###Shift all NPQ values so the minimum is 0
dec_data$measured_value[dec_data$measurement == "npq"] <- (dec_data$measured_value[dec_data$measurement == "npq"])+abs(min((filter(dec_data, measurement == "npq"))$measured_value))
jan_data$measured_value[jan_data$measurement == "npq"] <- (jan_data$measured_value[jan_data$measurement == "npq"])+abs(min((filter(jan_data, measurement == "npq"))$measured_value))
feb_data$measured_value[feb_data$measurement == "npq"] <- (feb_data$measured_value[feb_data$measurement == "npq"])+abs(min((filter(feb_data, measurement == "npq"))$measured_value))
###Remove the 2 NA values for phi2, and shift the phi2 measured values by the minimum values to ensure the minimum value is 0
dec_data <- na.omit(dec_data)
dec_data$measured_value[dec_data$measurement == "phi2"] <- (dec_data$measured_value[dec_data$measurement == "phi2"])+abs(min((filter(dec_data, measurement == "phi2"))$measured_value))
###Merge the two data frames, only using the columns they have in common
depi_all <- rbind(dec_data, jan_data, feb_data)%>%
arrange(genotype, time_point, month)
###Filter the time points by the max time point of the shortest experiment - can't make comparisons on days that the three experiments don't share
depi_all <- as.data.frame(depi_all%>%
filter(time_point <= min(c(max(jan_data$time_point), max(dec_data$time_point), max(feb_data$time_point)))))
depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
select(genotype, month, time_point, measured_value, measurement, individual_plant_metadata)%>%
pivot_wider(names_from = month, values_from = measured_value)%>%
select(Dec, Feb, Jan)
depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
select(genotype, month, time_point, measured_value, measurement, individual_plant_metadata)%>%
pivot_wider(names_from = month, values_from = measured_value)%>%
select(Dec, Feb, Jan)%>%
drop_na()
depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
select(genotype, month, time_point, measured_value, measurement, individual_plant_metadata)%>%
pivot_wider(names_from = month, values_from = measured_value)%>%
select(Dec, Feb, Jan)
###Merge the two data frames, only using the columns they have in common
depi_all <- rbind(dec_data, jan_data, feb_data)%>%
arrange(genotype, time_point, month)
###Filter the time points by the max time point of the shortest experiment - can't make comparisons on days that the three experiments don't share
depi_all <- as.data.frame(depi_all%>%
filter(time_point <= min(c(max(jan_data$time_point), max(dec_data$time_point), max(feb_data$time_point)))))
(depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec"))$measured_value
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec"))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan"))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb"))$measured_value
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec"))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan"))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb"))$measured_value
data.frame(dec_temp, jan_temp, feb_temp)
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec"))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan"))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb"))$measured_value
max_length <- max(length(dec_temp), length(jan_temp), length(feb_temp))
dec_temp <- c(deb_temp, rep(NA, max_length - length(dec_temp)))
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec"))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan"))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb"))$measured_value
max_length <- max(length(dec_temp), length(jan_temp), length(feb_temp))
dec_temp <- c(dec_temp, rep(NA, max_length - length(dec_temp)))
jan_temp <- c(jan_temp, rep(NA, max_length - length(jan_temp)))
feb_temp <- c(feb_temp, rep(NA, max_length - length(feb_temp)))
data.frame(dec_temp, jan_temp, feb_temp)
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec"))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan"))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb"))$measured_value
max_length <- max(length(dec_temp), length(jan_temp), length(feb_temp))
dec_temp <- c(dec_temp, rep(NA, max_length - length(dec_temp)))
jan_temp <- c(jan_temp, rep(NA, max_length - length(jan_temp)))
feb_temp <- c(feb_temp, rep(NA, max_length - length(feb_temp)))
data.frame(dec = dec_temp, jan = jan_temp, feb = feb_temp)
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec")%>%arrange(measured_value))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan")%>%arrange(measured_value))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb")%>%arrange(measured_value))$measured_value
max_length <- max(length(dec_temp), length(jan_temp), length(feb_temp))
dec_temp <- c(dec_temp, rep(NA, max_length - length(dec_temp)))
jan_temp <- c(jan_temp, rep(NA, max_length - length(jan_temp)))
feb_temp <- c(feb_temp, rep(NA, max_length - length(feb_temp)))
data.frame(dec = dec_temp, jan = jan_temp, feb = feb_temp)
filter(depi_all, month == "Jan")
filter(depi_all, month == "Jan")$measured_value
typeof(filter(depi_all, month == "Jan")$measured_value)
typeof(filter(depi_all, month == "Dec")$measured_value)
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec")%>%arrange(measured_value))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan")%>%arrange(measured_value))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb")%>%arrange(measured_value))$measured_value
max_length <- max(length(dec_temp), length(jan_temp), length(feb_temp))
dec_temp <- c(dec_temp, rep(NA, max_length - length(dec_temp)))
jan_temp <- c(jan_temp, rep(NA, max_length - length(jan_temp)))
feb_temp <- c(feb_temp, rep(NA, max_length - length(feb_temp)))
df <- data.frame(dec = dec_temp, jan = jan_temp, feb = feb_temp)
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec")%>%arrange(measured_value))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan")%>%arrange(measured_value))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb")%>%arrange(measured_value))$measured_value
max_length <- max(length(dec_temp), length(jan_temp), length(feb_temp))
dec_temp <- c(dec_temp, rep(NA, max_length - length(dec_temp)))
jan_temp <- c(jan_temp, rep(NA, max_length - length(jan_temp)))
feb_temp <- c(feb_temp, rep(NA, max_length - length(feb_temp)))
df <- data.frame(dec = dec_temp, jan = jan_temp, feb = feb_temp)
df
dec_density <- density(df$dec)
dec_density <- density(df$dec, na.rm = TRUE)
dec_density
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
plot(dec_density)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
plot(dec_density, jan_density)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
plot(c(dec_density, jan_density))
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
sm.density.compare(dec_density, jan_density, xlab="Miles Per Gallon")
library(sm)
install.packages("sm")
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
sm.density.compare(dec_density, jan_density, xlab="Miles Per Gallon")
df$dec
na.rm(df$dec)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
sm.density.compare(df$dec[!is.na(df$dec)], df$jan[!is.na(df$jan)], xlab="Miles Per Gallon")
title(main="MPG Distribution by Car Cylinders")
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
plot(dec_density)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
plot(dec_density)
lines(jan_density)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
plot(dec_density)
lines(jan_density)
lines(feb_density)
dec_density
jan_density
feb_density
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .52))
lines(jan_density)
lines(feb_density)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density)
lines(feb_density)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.4, 12, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1:2, cex=0.8)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.4, 12, legend=c("December", "January", "February"),
col=c("black", "blue", "red"))
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.4, 12, legend=c("December", "January", "February"),
col=c("black", "blue", "red"),cex=0.8)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.4, 12, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1:2, cex=0.8)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.4, 12, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1:2)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.4, 12, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.3, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75))
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
labs(main = "Test")
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75), main = "Test")
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
library(sm)
dec_density <- density(df$dec, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75), main = "Time Point 0 - NPQ - Col0 - Density for all experiments")
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
dec_density <- density(dec_temp, na.rm = TRUE)
jan_density <- density(df$jan, na.rm = TRUE)
feb_density <- density(df$feb, na.rm = TRUE)
# .35 to .52
plot(dec_density, xlim = c(.35, .75), main = "Time Point 0 - NPQ - Col0 - Density for all experiments")
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
# dec_density <- density(dec_temp)
# jan_density <- density(jan_temp)
# feb_density <- density(feb_temp)
# # .35 to .52
plot(density(dec_temp), xlim = c(.35, .75), main = "Time Point 0 - NPQ - Col0 - Density for all experiments")
dec_density <- density(dec_temp)
dec_temp
dec_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Dec")%>%arrange(measured_value))$measured_value
jan_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Jan")%>%arrange(measured_value))$measured_value
feb_temp <- (depi_all%>%filter(genotype == "Col0", measurement == "npq", time_point == "0", month == "Feb")%>%arrange(measured_value))$measured_value
dec_temp
# dec_density <- density(dec_temp)
# jan_density <- density(jan_temp)
# feb_density <- density(feb_temp)
# # .35 to .52
plot(dec_density, xlim = c(.35, .75), main = "Time Point 0 - NPQ - Col0 - Density for all experiments")
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
# dec_density <- density(dec_temp)
# jan_density <- density(jan_temp)
# feb_density <- density(feb_temp)
# # .35 to .52
plot(density(dec_temp), xlim = c(.35, .75), main = "Time Point 0 - NPQ - Col0 - Density for all experiments")
lines(jan_density, col = "blue")
lines(feb_density, col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
plot(density(dec_temp), xlim = c(.35, .75), main = "Time Point 0 - NPQ - Col0 - Density for all experiments")
lines(density(jan_temp), col = "blue")
lines(density(feb_temp), col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
depi_all%>%
group_by(month)%>%
summarize(length(unique(genotype)))
depi_all%>%
group_by(month, genotype)%>%
summarize(length(genotype))
head(depi_all)
depi_all%>%
group_by(month, genotype, measurement)%>%
summarize(length(unique(individual_plant_metadata)))
depi_all%>%
group_by(month, genotype, measurement)%>%
summarize(length(unique(individual_plant_metadata)))%>%
select(-measurement)%>%
distinct()
depi_all%>%
group_by(month, genotype, measurement)%>%
summarize(length(unique(individual_plant_metadata)))%>%
select(-measurement)%>%
distinct()%>%
arrange(genotype)
depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
arrange(measured_value)%>%
group_by(month)%>%
mutate(min = min(measured_value), max = max(measured_value))
depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
arrange(measured_value)%>%
group_by(month)%>%
mutate(min = min(measured_value), max = max(measured_value))%>%
mutate(scaled = (measured_value - min)/(max - min))
depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
arrange(measured_value)%>%
group_by(month)%>%
mutate(min = min(measured_value), max = max(measured_value))%>%
mutate(scaled = (measured_value - min)/(max - min))%>%
select(month, scaled)
head(depi_all)
unique(depi_all$month)
test_normalization <- depi_all%>%
filter(genotype == "Col0", measurement == "npq", time_point == "0")%>%
arrange(measured_value)%>%
group_by(month)%>%
mutate(min = min(measured_value), max = max(measured_value))%>%
mutate(scaled = (measured_value - min)/(max - min))%>%
select(month, scaled)
filter(test_normalization, month == "Jan")$scaled
plot(density(filter(test_normalization, month == "Dec")$scaled), xlim = c(.35, .75), main = "Time Point 0 - NPQ - Col0 - Min-Max Normalization")
lines(density(filter(test_normalization, month == "Jan")$scaled), col = "blue")
lines(density(filter(test_normalization, month == "Feb")$scaled), col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
plot(density(filter(test_normalization, month == "Dec")$scaled), xlim = c(0, 1), main = "Time Point 0 - NPQ - Col0 - Min-Max Normalization")
lines(density(filter(test_normalization, month == "Jan")$scaled), col = "blue")
lines(density(filter(test_normalization, month == "Feb")$scaled), col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
plot(density(filter(test_normalization, month == "Dec")$scaled), xlim = c(-1, 2), main = "Time Point 0 - NPQ - Col0 - Min-Max Normalization")
lines(density(filter(test_normalization, month == "Jan")$scaled), col = "blue")
lines(density(filter(test_normalization, month == "Feb")$scaled), col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
plot(density(filter(test_normalization, month == "Dec")$scaled), xlim = c(-1, 2), main = "Time Point 0 - NPQ - Col0 - Min-Max Normalization")
lines(density(filter(test_normalization, month == "Jan")$scaled), col = "blue")
lines(density(filter(test_normalization, month == "Feb")$scaled), col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
summary(test_normalization$scaled)
plot(density(filter(test_normalization, month == "Dec")$scaled), xlim = c(-1, 2), main = "Time Point 0 - NPQ - Col0 - Min-Max Normalization")
lines(density(filter(test_normalization, month == "Jan")$scaled), col = "blue")
lines(density(filter(test_normalization, month == "Feb")$scaled), col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
summary(filter(test_normalization, month == "Dec")$scaled)
summary(filter(test_normalization, month == "Jan")$scaled)
summary(filter(test_normalization, month == "Feb")$scaled)
plot(density(filter(test_normalization, month == "Dec")$scaled), xlim = c(-1, 2), main = "Time Point 0 - NPQ - Col0 - Min-Max Normalization")
lines(density(filter(test_normalization, month == "Jan")$scaled), col = "blue")
lines(density(filter(test_normalization, month == "Feb")$scaled), col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
summary(filter(test_normalization, month == "Dec")$scaled)
summary(filter(test_normalization, month == "Jan")$scaled)
summary(filter(test_normalization, month == "Feb")$scaled)
plot(density(filter(test_normalization, month == "Dec")$scaled), xlim = c(-1, 2), ylim = c(0,2), main = "Time Point 0 - NPQ - Col0 - Min-Max Normalization")
lines(density(filter(test_normalization, month == "Jan")$scaled), col = "blue")
lines(density(filter(test_normalization, month == "Feb")$scaled), col = "red")
legend(.35, 14, legend=c("December", "January", "February"),
col=c("black", "blue", "red"), lty=1)
summary(filter(test_normalization, month == "Dec")$scaled)
summary(filter(test_normalization, month == "Jan")$scaled)
summary(filter(test_normalization, month == "Feb")$scaled)
