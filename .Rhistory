nrow(heatmap_data_binned)
i <- 1
heatmap_data_binned$selectionCoef[1]
temp_bin_vector <- rep(NA, nrow(heatmap_data_binned))
temp_bin_vector
summary(heatmap_data_binned$selectionCoef)
quantile(heatmap_data_binned$selectionCoef, c(0, 0.2, 0.4, 0.6, 0.8, 1))
hist(heatmap_data_binned$selectionCoef)
order(heatmap_data_binned$selectionCoef)
heatmap_binned_selectionCoef
heatmap_binned$selectionCoef
heatmap_data_binned$selectionCoef
sort(heatmap_data_binned$selectionCoef)
# set up cut-off values
breaks <- c(-1200,-0.4,-0.3,-0.2,-0.1,0,0.1,0.2, 0.3, 1200)
# specify interval/bin labels
tags <- c("Lower than 0.025 Quantil","[-0.04, -0.3)", "[-0.3, -0.2)", "[-0.2, -0.1)", "[-0.1, 0)", "[0, 0.1)","[0.1, 0.2)", "[0.2, 0.3)","Exceeds 0.975 Quantile")
# bucketing values into bins
group_tags <- cut(heatmap_data_binned$selectionCoef,
breaks=breaks,
include.lowest=TRUE,
right=FALSE,
labels=tags)
# inspect bins
summary(group_tags)
group_tags
heatmap_data_binned$bins <- group_tags
heatmap_data_binned$bins
heatmap_data_binned$bins <- as.factor(heatmap_data_binned$bins)
summary(heatmap_data_binned$bins)
heatmap_data_binned
summary(heatmap_data_binned$selectionCoef)
length(unique(heatmap_data_binned$bins))
gradient_palette <- topo.colors(9)
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = Genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = gradient_palette)
### Add a columns "bins" to the data frame with the group_tags
heatmap_data_binned$bins <- group_tags
### Make this column a factor
heatmap_data_binned$bins <- as.factor(heatmap_data_binned$bins)
### Filter to create a data frame for each measurement
heatmap_binned_sn <- filter(heatmap_data_binned, Measurement == "SN")
heatmap_binned_tsc <- filter(heatmap_data_binned, Measurement == "TSC")
heatmap_binned_spf <- filter(heatmap_data_binned, Measurement == "SPF")
gradient_palette <- topo.colors(9)
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = Genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = gradient_palette)
colnames(heatmap_binned_spf)
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = gradient_palette)
gradient_palette <- cm.colors(9)
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = gradient_palette)
gradient_palette <- c("blue", cm.colors(7), "red")
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = gradient_palette)
length(unique(heatmap_binned_spf$bins))
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_sn$bins) - 2)) , "red"))
length(unique(heatmap_binned_sn$bins) - 2)
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_sn$bins)) - 2) , "red"))
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", terrain.colors(length(unique(heatmap_binned_sn$bins)) - 2) , "red"))
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_sn$bins)) - 2) , "red"))
ggplot(data = heatmap_binned_tsc, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for TSC")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_tsc$bins)) - 2) , "red"))
ggplot(data = heatmap_binned_tsc, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for TSC")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_tsc$bins)) - 1)))
ggplot(data = heatmap_binned_spf, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SPF")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_spf$bins)) - 2), "red"))
### Apply the add_number function above to the data frame
heatmap_data_binned <- add_number(heatmap_data_binned)
### Reorder genotype by the "number" column. Multiply this by -1, because the order was opposite of what I wanted it to be
heatmap_data_binned$genotype <- reorder(heatmap_data_binned$genotype, heatmap_data_binned$number * -1)
### Filter to create a data frame for each measurement
heatmap_binned_sn <- filter(heatmap_data_binned, Measurement == "SN")
heatmap_binned_tsc <- filter(heatmap_data_binned, Measurement == "TSC")
heatmap_binned_spf <- filter(heatmap_data_binned, Measurement == "SPF")
### Create binned SN heatmap
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_sn$bins)) - 2) , "red"))
### Create binned TSC heat map
ggplot(data = heatmap_binned_tsc, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for TSC")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_tsc$bins)) - 1)))
### Create binned SPF heat map
ggplot(data = heatmap_binned_spf, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SPF")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_spf$bins)) - 2), "red"))
# specify interval/bin labels
tags <- c("Lower than 0.025 Quantile","[-0.04, -0.3)", "[-0.3, -0.2)", "[-0.2, -0.1)", "[-0.1, 0)", "[0, 0.1)","[0.1, 0.2)", "[0.2, 0.3)","Exceeds 0.975 Quantile")
# bucketing values into bins
group_tags <- cut(heatmap_data_binned$selectionCoef,
breaks=breaks,
include.lowest=TRUE,
right=FALSE,
labels=tags)
# inspect bins
summary(group_tags)
### Add a columns "bins" to the data frame with the group_tags
heatmap_data_binned$bins <- group_tags
### Make this column a factor
heatmap_data_binned$bins <- as.factor(heatmap_data_binned$bins)
### Apply the add_number function above to the data frame
heatmap_data_binned <- add_number(heatmap_data_binned)
### Reorder genotype by the "number" column. Multiply this by -1, because the order was opposite of what I wanted it to be
heatmap_data_binned$genotype <- reorder(heatmap_data_binned$genotype, heatmap_data_binned$number * -1)
### Filter to create a data frame for each measurement
heatmap_binned_sn <- filter(heatmap_data_binned, Measurement == "SN")
heatmap_binned_tsc <- filter(heatmap_data_binned, Measurement == "TSC")
heatmap_binned_spf <- filter(heatmap_data_binned, Measurement == "SPF")
### Create binned SN heatmap
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_sn$bins)) - 2) , "red"))
### Create binned TSC heat map
ggplot(data = heatmap_binned_tsc, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for TSC")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_tsc$bins)) - 1)))
### Create binned SPF heat map
ggplot(data = heatmap_binned_spf, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SPF")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_spf$bins)) - 2), "red"))
###Visualize the normalizations to make sure the quantile normalized
###flats each have the same distribution for all experiments
for (i in c("DEPI1", "DEPI2", "DEPI3")){
for (m in c("TSC", "SN", "SPF")){
plotData <- NormalizedData%>%
filter(Measurement == m , Experiment == i)
title1 <- paste(i, m, "- Before Normalization", sep = " ")
title2 <- paste(i, m, "- After Normalization", sep = " ")
plot1 <- ggplot(data = plotData, aes(x = Measured_Value, color = Flat))+
geom_density()+
stat_density(geom = "line", position = "identity")+
theme_linedraw()+
labs(x = m,
y = "Density",
title = title1)
plot2 <- ggplot(data = plotData, aes(x = NormalizedMeasuredValue, color = Flat))+
geom_density()+
stat_density(geom = "line", position = "identity")+
theme_linedraw()+
labs(x = paste(m ,"Normalized by Flat", sep = " "),
y = "Density",
title = title2)
grid.arrange(plot1, plot2)
# ggsave(file=QuantFileName, arrangeGrob(plot1, plot2), width = 7, height = 7)
}
}
### Create binned SN heatmap
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_sn$bins)) - 2) , "red"))
### Create binned TSC heat map
ggplot(data = heatmap_binned_tsc, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for TSC")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_tsc$bins)) - 1)))
### Create binned SPF heat map
ggplot(data = heatmap_binned_spf, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SPF")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_spf$bins)) - 2), "red"))
summary(heatmap_data_binned$bins)
3 * 3 * 38
### Create binned TSC heat map
ggplot(data = heatmap_binned_tsc, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for TSC")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_tsc$bins)) - 1)))
### Create binned SPF heat map
ggplot(data = heatmap_binned_spf, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SPF")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_spf$bins)) - 2), "red"))
### Create binned SN heatmap
ggplot(data = heatmap_binned_sn, aes(x = Experiment, y = genotype, fill = bins)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("blue", cm.colors(length(unique(heatmap_binned_sn$bins)) - 2) , "red"))
### Create TSC heatmap:
ggplot(data = heatmap_data_tsc, aes(x = Experiment, y = genotype, fill = selectionCoef)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for TSC")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank())+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lowerbound, upperbound), breaks = c(lowerbound, 0, upperbound), labels = c("-0.52", "0", "0.46"))
### Create SPF heatmap:
ggplot(data = heatmap_data_spf, aes(x = Experiment, y = genotype, fill = selectionCoef)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SPF")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank())+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lowerbound, upperbound), breaks = c(lowerbound, 0, upperbound), labels = c("-0.52", "0", "0.46"))
### Create SN heatmap:
ggplot(data = heatmap_data_sn, aes(x = Experiment, y = genotype, fill = selectionCoef)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank())+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lowerbound, upperbound), breaks = c(lowerbound, 0, upperbound), labels = c("-0.52", "0", "0.46"))
### Create TSC heatmap:
ggplot(data = heatmap_data_tsc, aes(x = Experiment, y = genotype, fill = selectionCoef)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for TSC")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank())+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lowerbound, upperbound), breaks = c(lowerbound, 0, upperbound), labels = c("-0.52", "0", "0.46"))
### Create SPF heatmap:
ggplot(data = heatmap_data_spf, aes(x = Experiment, y = genotype, fill = selectionCoef)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SPF")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank())+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lowerbound, upperbound), breaks = c(lowerbound, 0, upperbound), labels = c("-0.52", "0", "0.46"))
### Create SN heatmap:
ggplot(data = heatmap_data_sn, aes(x = Experiment, y = genotype, fill = selectionCoef)) +
labs(fill = "Selection Coefficient", x = "Experiment", y = NULL, title = "Selection Coefficients for SN")+
geom_tile()+
theme_tufte(
base_family = "Calibri")+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank())+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lowerbound, upperbound), breaks = c(lowerbound, 0, upperbound), labels = c("-0.52", "0", "0.46"))
data <- read.csv("C:/Users/Owner/Documents/Research/Shiu_Lab/Shiu_Lab_R/Data/MAPK_DEPI_fitness_data_110920.csv", header = TRUE)
###The "Experiment" column name reads in strange, with weird characters at the beginning
###Rename this column:
colnames(data)[1] <- "Experiment"
#Make sure flat, row, column, and genotype are coded as categorical variables
data$Flat<-as.factor(data$Flat)
data$Row<-as.factor(data$Row)
data$Column<-as.factor(data$Column)
data$Genotype <- as.factor(data$Genotype)
data <- data%>%
###Group by experiment and genotype
group_by(Experiment, Genotype)%>%
###INCLUDE THE OUTLIER REMOVAL STEPS HERE:
###For each of the measurements, replace the measured value with NA if the measured value is classified as an outlier
mutate(SN = replace(SN, outliers_mad(SN, b=1.4826, threshold=3.5, na.rm=TRUE)$outliers_pos, NA))%>%
mutate(SPF = replace(SPF, outliers_mad(SPF, b=1.4826, threshold=3.5, na.rm=TRUE)$outliers_pos, NA))%>%
mutate(TSC = replace(TSC, outliers_mad(TSC, b=1.4826, threshold=3.5, na.rm=TRUE)$outliers_pos, NA))%>%
ungroup()%>%
###Rearrange the data by experiment and genotype
arrange(Experiment, Genotype)
data%>%
group_by(Experiment)%>%
summarize(PropOutlier = sum(is.na(TSC)) / length(TSC))
###SPF
data%>%
group_by(Experiment)%>%
summarize(PropOutlier = sum(is.na(SPF)) / length(SPF))
###SN
data%>%
group_by(Experiment)%>%
summarize(PropOutlier = sum(is.na(SN)) / length(SN))
data$ID <- paste(data$Experiment, "_", data$Flat, "_", data$Number)
data$IS
data$ID
data$ID <- paste(data$Experiment, "_", data$Flat, "_", data$Number, sep = "")
data$IS
data$ID
data <- data%>%
###Group by experiment and genotype
group_by(Experiment, Genotype)%>%
###INCLUDE THE OUTLIER REMOVAL STEPS HERE:
###For each of the measurements, replace the measured value with NA if the measured value is classified as an outlier
mutate(SN = replace(SN, outliers_mad(SN, b=1.4826, threshold=3.5, na.rm=TRUE)$outliers_pos, NA))%>%
mutate(SPF = replace(SPF, outliers_mad(SPF, b=1.4826, threshold=3.5, na.rm=TRUE)$outliers_pos, NA))%>%
mutate(TSC = replace(TSC, outliers_mad(TSC, b=1.4826, threshold=3.5, na.rm=TRUE)$outliers_pos, NA))%>%
ungroup()%>%
###Rearrange the data by experiment and genotype
arrange(Experiment, Genotype)
SN_outliers <- filter(data, is.na(data$SN))
SN_outliers
SN_outliers <- filter(data, is.na(data$SN))$ID
length(SN_outliers )
SN_outliers
TSC_outliers <- filter(data, is.na(data$TSC))$ID
SPF_outliers <- filter(data, is.na(data$SPF))$ID
TSC_outliers
SPF_outliers
SN_outliers
colnames(data)
summary(data$border)
sum(data$border == TRUE)
