geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
#scale_x_continuous(breaks =
#round(c(0,15,24,39.5,48,63.7,72,87,96,112,
#120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "black"))
##### ----- Dec p-value heat map - NPQ ------
ggplot(data = december_npq, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "December: NPQ P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
#scale_x_continuous(breaks =
#round(c(0,15,24,39.5,48,63.7,72,87,96,112,
#120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "orange", "black"))
#ggsave("dec_npq_corrected.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")
##### ----- Dec p-value heat map - phi2 ------
ggplot(data = december_phi2, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "December: Phi2 P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
#scale_x_continuous(breaks =
#round(c(0,15,24,39.5,48,63.7,72,87,96,112,
#120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "black"))
##### ----- Dec p-value heat map - NPQ ------
ggplot(data = december_npq, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "December: NPQ P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
#scale_x_continuous(breaks =
#round(c(0,15,24,39.5,48,63.7,72,87,96,112,
#120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "orange", "black"))
##### ----- Dec p-value heat map - phi2 ------
ggplot(data = december_phi2, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "December: Phi2 P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "orange", "black"))
january_leafarea
january_npq <- corrected_jan_p_values%>%
filter(measurement == "npq", type = "p_adj")%>%
mutate(bin = case_when(
(p <0.01)~ 'p<0.01',
(p>0.01 & p < 0.05)~ "0.01<p<0.05",
(p>0.05)~"p>0.05"))
january_npq <- corrected_jan_p_values%>%
filter(measurement == "npq", type == "p_adj")%>%
mutate(bin = case_when(
(p <0.01)~ 'p<0.01',
(p>0.01 & p < 0.05)~ "0.01<p<0.05",
(p>0.05)~"p>0.05"))
january_phi2 <- corrected_jan_p_values%>%
filter(measurement == "phi2", type == "p_adj")%>%
mutate(bin = case_when(
(p <0.01)~ 'p<0.01',
(p>0.01 & p < 0.05)~ "0.01<p<0.05",
(p>0.05)~"p>0.05"))
january_leafarea <- corrected_jan_p_values%>%
filter(measurement == "leafarea", type == "p_adj")%>%
mutate(bin = case_when(
(p <0.01)~ 'p<0.01',
(p>0.01 & p < 0.05)~ "0.01<p<0.05",
(p>0.05)~"p>0.05"))
###In order to use these bins as the fill in a heat map, convert to a factor
january_npq$bin <- as.factor(january_npq$bin)
january_phi2$bin <- as.factor(january_phi2$bin)
january_npq <- add_number(january_npq)
january_phi2 <- add_number(january_phi2)
###We want p<0.1 to be first in the legend, so refactor with p<0.01 as the first term
january_npq$bin<- relevel(january_npq$bin, 'p<0.01')
january_phi2$bin <- relevel(january_phi2$bin, "0.01<p<0.05")
###Reorder by number so heat map has WT first, then single, then double mutants
january_npq$genotype <- reorder(january_npq$genotype, january_npq$number)
january_phi2$genotype <- reorder(january_phi2$genotype, january_phi2$number)
summary(january_leafarea$p)
###In order to use these bins as the fill in a heat map, convert to a factor
january_npq$bin <- as.factor(january_npq$bin)
january_phi2$bin <- as.factor(january_phi2$bin)
january_leafarea$bin <- as.factor(january_leafarea$bin)
january_npq <- add_number(january_npq)
january_phi2 <- add_number(january_phi2)
january_leafarea <- add_number(january_leafarea)
###We want p<0.1 to be first in the legend, so refactor with p<0.01 as the first term
january_npq$bin<- relevel(january_npq$bin, 'p<0.01')
january_phi2$bin <- relevel(january_phi2$bin, "0.01<p<0.05")
january_leafarea$bin<- relevel(january_leafarea$bin, 'p<0.01')
###Reorder by number so heat map has WT first, then single, then double mutants
january_npq$genotype <- reorder(january_npq$genotype, january_npq$number)
january_phi2$genotype <- reorder(january_phi2$genotype, january_phi2$number)
january_leafarea$genotype <- reorder(january_leafarea$genotype, january_leafarea$number)
##### ----- January p-value heat map - NPQ ------
ggplot(data = january_npq, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "January: NPQ P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
#scale_x_continuous(breaks =
#round(c(0,15,24,39.5,48,63.7,72,87,96,112,
#120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "orange", "black"))
##### ----- January p-value heat map - phi2 ------
ggplot(data = january_phi2, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "January: Phi2 P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "orange", "black"))
##### ----- January p-value heat map - phi2 ------
ggplot(data = january_leafarea, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "January: Leafarea P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "orange", "black"))
february_npq <- corrected_feb_p_values%>%
filter(measurement == "npq", type = "p_adj")%>%
mutate(bin = case_when(
(p <0.01)~ 'p<0.01',
(p>0.01 & p < 0.05)~ "0.01<p<0.05",
(p>0.05)~"p>0.05"))
february_npq <- corrected_feb_p_values%>%
filter(measurement == "npq", type == "p_adj")%>%
mutate(bin = case_when(
(p <0.01)~ 'p<0.01',
(p>0.01 & p < 0.05)~ "0.01<p<0.05",
(p>0.05)~"p>0.05"))
february_phi2 <- corrected_feb_p_values%>%
filter(measurement == "phi2", type == "p_adj")%>%
mutate(bin = case_when(
(p <0.01)~ 'p<0.01',
(p>0.01 & p < 0.05)~ "0.01<p<0.05",
(p>0.05)~"p>0.05"))
february_leafarea <- corrected_feb_p_values%>%
filter(measurement == "leafarea", type == "p_adj")%>%
mutate(bin = case_when(
(p <0.01)~ 'p<0.01',
(p>0.01 & p < 0.05)~ "0.01<p<0.05",
(p>0.05)~"p>0.05"))
###In order to use these bins as the fill in a heat map, convert to a factor
february_npq$bin <- as.factor(february_npq$bin)
february_phi2$bin <- as.factor(february_phi2$bin)
february_leafarea$bin <- as.factor(february_leafarea$bin)
february_npq <- add_number(february_npq)
february_phi2 <- add_number(february_phi2)
february_leafarea <- add_number(february_leafarea)
###We want p<0.1 to be first in the legend, so refactor with p<0.01 as the first term
february_npq$bin<- relevel(february_npq$bin, 'p<0.01')
february_phi2$bin <- relevel(february_phi2$bin, "0.01<p<0.05")
february_leafarea$bin<- relevel(february_leafarea$bin, 'p<0.01')
summary(february_leafarea$p)
###In order to use these bins as the fill in a heat map, convert to a factor
february_npq$bin <- as.factor(february_npq$bin)
february_phi2$bin <- as.factor(february_phi2$bin)
february_npq <- add_number(february_npq)
february_phi2 <- add_number(february_phi2)
###We want p<0.1 to be first in the legend, so refactor with p<0.01 as the first term
february_npq$bin<- relevel(february_npq$bin, 'p<0.01')
february_phi2$bin <- relevel(february_phi2$bin, "0.01<p<0.05")
###Reorder by number so heat map has WT first, then single, then double mutants
february_npq$genotype <- reorder(february_npq$genotype, february_npq$number)
february_phi2$genotype <- reorder(february_phi2$genotype, february_phi2$number)
##### ----- February p-value heat map - NPQ ------
ggplot(data = february_npq, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "February: NPQ P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
#scale_x_continuous(breaks =
#round(c(0,15,24,39.5,48,63.7,72,87,96,112,
#120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "orange", "black"))
##### ----- February p-value heat map - phi2 ------
ggplot(data = february_phi2, aes(x = time_point, y = genotype, fill = bin)) +
labs(fill = "P-Value, \nwith FDR Correction", x = "Hours", y = NULL, title = "February: Phi2 P-value, Corrected")+
geom_tile(width = 10 , height = 20)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_manual(values = c("red", "orange", "black"))
library(knitr)
library(formatR)
knitr::opts_chunk$set(message=FALSE, echo = TRUE, warning = FALSE, dev = "cairo_pdf",
tidy.opts=list(width.cutoff=40),tidy=TRUE, cache = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(stringi)
library(dplyr)
library(viridis)
library(ggplot2)
library(extrafont)
library(ggthemes)
library(lemon)
depi_data <- read.table("C:/Users/Owner/Documents/Research/Shiu_Lab/Shiu_Lab_R/Data/Clean_DEPI_Data_V2.csv", sep = ",", header = TRUE)
add_day_col <- function(df){
df$Time_Point <- as.numeric(df$Time_Point)
out <- df%>%
mutate(day = case_when(
(df$Time_Point <= 15)~ "1",
(df$Time_Point >= 24 & df$Time_Point <= 39.5)~ '2',
(df$Time_Point >= 48 & df$Time_Point <= 63.7)~ '3',
(df$Time_Point >= 72 & df$Time_Point < 87.01)~ '4',
(df$Time_Point >= 96 & df$Time_Point < 111.8)~ '5',
(df$Time_Point >= 120 & df$Time_Point <= 135)~ '6',
(df$Time_Point >= 144 & df$Time_Point <= 159)~ '7',
(df$Time_Point >= 168 & df$Time_Point < 192)~ '8'))
out$day <- as.integer(out$day)
return(out)}
add_number <- function(data_frame){
###First, if the genotype is Col0 (only genotype with length 4), assign 0 as number
###Else, assign number as genotype with "mpk" removed
###Example: mpk1 will be 1, mpk1-17 will be 1-17
data_frame <- data_frame%>%
mutate(number = ifelse(genotype != "Col0",(stri_sub(genotype, 4, length(genotype))), 0))
###Next, for all double mutants, replace "-" with "0"
###Example: 1-17 becomes 1017
data_frame$number <- as.numeric(gsub("-","0", data_frame$number))
###Almost there! There's a problem with two single digit double mutants
###We need a four digit number to sort correctly
###Example: mpk1-3 -> 1-3 -> 103, but we need it to be 1003 to sort correctly
data_frame$number[data_frame$number == "103"] <- "1003"
data_frame$number[data_frame$number == "506"] <- "5006"
data_frame$number[data_frame$number == "608"] <- "6008"
data_frame$number[data_frame$number == "609"] <- "6009"
###Convert number to a numberic in order to sort
data_frame$number <- as.numeric(data_frame$number)
data_frame <- data_frame%>%arrange(number)
data_frame <- data_frame%>%mutate(number_2 = number)
data_frame$number_2[nchar(data_frame$number_2) == 4] <- 0
data_frame$number_2[nchar(data_frame$number_2) == 5] <- 0
return(data_frame)
}
selectionCoef<- data.frame(genotype = rep(NA, 0),
SelectionCoefficient = rep(NA, 0),
Experiment = rep(NA, 0),
Measurement = rep(NA, 0),
Time_Point = rep(NA, 0))
temp_month <- "Jan"
temp_measurement <- "phi2"
temp_data <- depi_data%>%
filter(month == temp_month, measurement == temp_measurement)
for(temp_month in c("Dec", "Jan", "Feb")){
for (temp_measurement in c("phi2", "npq")){
temp_data <- depi_data%>%
filter(month == temp_month, measurement == temp_measurement)
temp_n_row <- ifelse(temp_month == "Dec", 37, 38)
for (i in unique(temp_data$time_point)){
temp_data_2 <- filter(temp_data, time_point == i)
selectionCoefTmp <- data.frame(genotype = rep(NA, temp_n_row),
SelectionCoefficient = rep(NA, temp_n_row),
Experiment = rep(NA, temp_n_row),
Measurement = rep(NA, temp_n_row),
Time_Point = rep(NA, temp_n_row))
count <- 1
for (g in unique(temp_data$genotype)){
fm <- mean(filter(temp_data_2, genotype == g, month == temp_month, measurement == temp_measurement, time_point == i)$normalized_value)
fwt <- mean(filter(temp_data_2, genotype == "Col0", month == temp_month, measurement == temp_measurement, time_point == i)$normalized_value)
selectionCoefTmp[count, 1] <- g
selectionCoefTmp[count, 2] <- (fm - fwt) / fwt
selectionCoefTmp[count, 3] <- temp_month
selectionCoefTmp[count, 4] <- temp_measurement
selectionCoefTmp[count, 5] <- i
count <- count + 1
}
selectionCoef <- rbind(selectionCoef, selectionCoefTmp)
}
}
}
m_test_1 <- mean(filter(depi_data, month == "Dec", measurement == "phi2", time_point == "0", genotype == "mpk1")$normalized_value)
wt_test_1 <- mean(filter(depi_data, month == "Dec", measurement == "phi2", time_point == "0", genotype == "Col0")$normalized_value)
((m_test_1 - wt_test_1) / wt_test_1)
filter(selectionCoef, Experiment == "Dec", Measurement == "phi2", Time_Point == "0", genotype == "mpk1")
selectionCoef <- add_number(selectionCoef)
selectionCoef$genotype <- reorder(selectionCoef$genotype, selectionCoef$number)
selectionCoef <- add_day_col(selectionCoef)
for (temp_measurement in c("phi2", "npq")){
set_bounds <- selectionCoef%>%filter(Measurement == temp_measurement)
lower_bound <- round(min(set_bounds$SelectionCoefficient) - 0.05, 2)
upper_bound <- round(max(set_bounds$SelectionCoefficient) + 0.05, 2)
for (temp_month in c("Dec", "Jan", "Feb")){
temp_plot_data <- filter(selectionCoef, Experiment == temp_month, Measurement == temp_measurement)
temp_title <- ifelse(temp_month == "Dec", "December", ifelse(temp_month == "Jan", "January", "February"))
plot <- ggplot(data = temp_plot_data, aes(x = Time_Point, y = genotype, fill = SelectionCoefficient)) +
labs(fill = "Selection Coefficients", x = "Hours", y = NULL, title = paste(temp_title, ":", temp_measurement, " Selection Coefficient", sep = ""))+
geom_tile(width = ifelse(temp_measurement == "leafarea", 16, 10) , height = 30)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lower_bound, upper_bound), breaks = c(lower_bound, 0, upper_bound), labels = c(as.character(lower_bound), "0", as.character(upper_bound)))
print(plot)
}
}
selectionCoef_day3 <- selectionCoef%>%filter(day == "3")
for (temp_measurement in c("phi2", "npq")){
set_bounds <- selectionCoef_day3%>%filter(Measurement == temp_measurement)
lower_bound <- round(min(set_bounds$SelectionCoefficient) - 0.05, 2)
upper_bound <- round(max(set_bounds$SelectionCoefficient) + 0.05, 2)
for (temp_month in c("Dec", "Jan", "Feb")){
temp_plot_data <- filter(selectionCoef_day3, Experiment == temp_month, Measurement == temp_measurement)
temp_title <- ifelse(temp_month == "Dec", "December", ifelse(temp_month == "Jan", "January", "February"))
plot <- ggplot(data = temp_plot_data, aes(x = Time_Point, y = genotype, fill = SelectionCoefficient)) +
labs(fill = "Selection Coefficients", x = "Hours", y = NULL, title = paste(temp_title, ":", temp_measurement, " Selection Coefficient", sep = ""))+
geom_tile(width = ifelse(temp_measurement == "leafarea", 16, 10) , height = 30)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lower_bound, upper_bound), breaks = c(lower_bound, 0, upper_bound), labels = c(as.character(lower_bound), "0", as.character(upper_bound)))
print(plot)
}
}
all_double_mutants = list()
for (gen in unique(depi_data$genotype)) {
if (str_detect(gen, "-") == T) {
all_double_mutants = c(all_double_mutants, gen)
}
}
###Epistasis Calculations:
###Initialize an empty data frame to populate with information:
geneticInteractions <- data.frame(genotype = rep(NA, 0),
MutantA = rep(NA, 0),
MutantB = rep(NA, 0),
AdditiveEpistasis = rep(NA, 0),
ProportionalEpistatis = rep(NA, 0),
Experiment = rep(NA, 0),
Measurement = rep(NA, 0),
Time_Point = rep(NA, 0))
###Loop through each experiment and measurement:
for(e in c("Dec", "Jan", "Feb")){
for (m in c("phi2", "npq")){
temp_data <- depi_data%>%
filter(month == e, measurement == m)
temp_nrow <- 0
for (i in unique(temp_data$time_point)){
###Filter to each specific experiment and measurement
tempData <- temp_data%>%
filter(time_point == i)
###Create an empty data frame to fill with the information and calcuations:
geneticInteractionsTmp <- data.frame(genotype = rep(NA, temp_nrow),
MutantA = rep(NA, temp_nrow),
MutantB = rep(NA, temp_nrow),
AdditiveEpistasis = rep(NA, temp_nrow),
ProportionalEpistatis = rep(NA, temp_nrow),
Experiment = rep(NA, temp_nrow),
Measurement = rep(NA, temp_nrow),
Time_Point = rep(NA, temp_nrow))
###Initialize a row count to use to populate the data frame
rowCount <- 1
###For each of the double mutants:
for (dm in unlist(all_double_mutants)){
###Extract the single mutants from the double mutant
ma <- unlist(strsplit(dm, "-"))[1]
mb <- paste("mpk", unlist(strsplit(dm, "-"))[2], sep = "")
###Calculate the fitness of the dm, ma, mb, and wt
fdm <- mean(filter(tempData, genotype == dm)$normalized_value)
fwt <- mean(filter(tempData, genotype == "Col0")$normalized_value)
fma <- mean(filter(tempData, genotype == ma)$normalized_value)
fmb <- mean(filter(tempData, genotype == mb)$normalized_value)
###Calculate Additive and Proportional Epistasis
AddEp <- fdm + fwt - (fma + fmb)
PropEp <- log((fdm * fwt)/ (fma * fmb))
###Populate the data frame with this information:
geneticInteractionsTmp[rowCount, 1] <- dm
geneticInteractionsTmp[rowCount, 2] <- ma
geneticInteractionsTmp[rowCount, 3] <- mb
geneticInteractionsTmp[rowCount, 4] <- AddEp
geneticInteractionsTmp[rowCount, 5] <- PropEp
geneticInteractionsTmp[rowCount, 6] <- e
geneticInteractionsTmp[rowCount, 7] <- m
geneticInteractionsTmp[rowCount, 8] <- i
rowCount <- rowCount + 1
}
###Add the rows of the temporary genetic interaction information to the main data frame
geneticInteractions <- rbind(geneticInteractions, geneticInteractionsTmp)
}
}
}
geneticInteractions <- add_number(geneticInteractions)
geneticInteractions$genotype <- reorder(geneticInteractions$genotype, geneticInteractions$number)
geneticInteractions <- add_day_col(geneticInteractions)
for (temp_measurement in c("phi2", "npq")){
set_bounds <- geneticInteractions%>%filter(Measurement == temp_measurement)
lower_bound <- round(min(set_bounds$AdditiveEpistasis) - 0.05, 2)
upper_bound <- round(max(set_bounds$AdditiveEpistasis) + 0.05, 2)
for (temp_month in c("Dec", "Jan", "Feb")){
temp_plot_data <- filter(geneticInteractions, Experiment == temp_month, Measurement == temp_measurement)
temp_title <- ifelse(temp_month == "Dec", "December", ifelse(temp_month == "Jan", "January", "February"))
plot <- ggplot(data = temp_plot_data, aes(x = Time_Point, y = genotype, fill = AdditiveEpistasis)) +
labs(fill = "Additive Epistasis", x = "Hours", y = NULL, title = paste(temp_title, ":", temp_measurement, " Additive Epistasis", sep = ""))+
geom_tile(width = ifelse(temp_measurement == "leafarea", 16, 10) , height = 30)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lower_bound, upper_bound), breaks = c(lower_bound, 0, upper_bound), labels = c(as.character(lower_bound), "0", as.character(upper_bound)))
print(plot)
}
}
for (temp_measurement in c("phi2", "npq")){
set_bounds <- geneticInteractions%>%filter(Measurement == temp_measurement)
lower_bound <- round(min(set_bounds$ProportionalEpistatis) - 0.05, 2)
upper_bound <- round(max(set_bounds$ProportionalEpistatis) + 0.05, 2)
for (temp_month in c("Dec", "Jan", "Feb")){
temp_plot_data <- filter(geneticInteractions, Experiment == temp_month, Measurement == temp_measurement)
temp_title <- ifelse(temp_month == "Dec", "December", ifelse(temp_month == "Jan", "January", "February"))
plot <- ggplot(data = temp_plot_data, aes(x = Time_Point, y = genotype, fill = ProportionalEpistatis)) +
labs(fill = "Proportional Epistatis", x = "Hours", y = NULL, title = paste(temp_title, ":", temp_measurement, " Proportional Epistasis", sep = ""))+
geom_tile(width = ifelse(temp_measurement == "leafarea", 16, 10) , height = 30)+
facet_grid(genotype ~ day, scales = "free", switch = "y")+
theme_tufte(base_family = "Calibri",
base_size = 50)+
theme(strip.background.y = element_blank(),
strip.text.y = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.spacing=unit(0, "lines"))+
scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(lower_bound, upper_bound), breaks = c(lower_bound, 0, upper_bound), labels = c(as.character(lower_bound), "0", as.character(upper_bound)))
print(plot)
}
}
