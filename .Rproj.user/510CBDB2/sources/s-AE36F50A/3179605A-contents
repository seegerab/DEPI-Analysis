##### ----- ALL ------
##### -----Load necessary packages ------
library(dplyr)
library(ggplot2)
library(lemon)
library(data.table)
library(ggthemes)
library(extrafont)
library(Routliers)
library(stringi)
##### ----- Read in the data, make subsets ------
depi_data <-read.table("DEPI_analysis_Seeger.txt", sep = ",", header = FALSE)
###Add column names
names(depi_data) <- c("individual_plant_metadata", "genotype", "line", "subline", "border", "flat_number", "measurement_ID", "plant_ID", "measurement", "time_point", "measured_value")
###Some time points have an "X" in front of them; remove these X characters
depi_data$time_point <- as.numeric(gsub("X","", depi_data$time_point))
###Create a seperate data frame with the border plants
depi_border <- filter(depi_data, border == TRUE)
###Remove border plants from depi_data
depi_data <- filter(depi_data, border == FALSE)
###Remove genotypes that aren't mpk, and only keep Col0 from subline 1
depi_subset <- depi_data%>%filter(!genotype %in% c("b1", "b3", "b1b3", "ftsz2-1", "ftsz2-2", "ftsz-dbl", "Col0" )|genotype == "Col0"&subline == "1")
###December collection period has "growth", while February has "size" - both of these measurement are actually "leafarea", so replace "size" and "growth" with "leafarea"
levels(depi_subset$measurement)[levels(depi_subset$measurement)=="size"] <- "leafarea"
levels(depi_subset$measurement)[levels(depi_subset$measurement)=="growth"] <- "leafarea"
###Create subsets for February and December 
feb_data <- filter(depi_subset, substr(plant_ID, 1,4) == "0218")
dec_data <- filter(depi_subset, substr(plant_ID, 1,4) == "1217")
##### ----- Function - add column with day ------
add_day_col <- function(data_frame){
  unique_time <- sort(unique(data_frame$time_point))
  diff <- c()
  for (i in 1:length(unique_time)){
    if (i == 1){
      diff[1] <- 0
    }else{
      diff[i] <- unique_time[i] - unique_time[i-1]}}
  breaks <-c(0)
  for (i in 1:length(diff)){
    if (diff[i] > 5)
      breaks <- append(breaks, unique_time[i])}
  out <- data.frame()
  for (i in 1:length(breaks)){
    if (i == length(breaks)){
      indiv <- data_frame%>%filter(time_point >= breaks[i])%>%mutate(day = i)
    }else{
      indiv <- data_frame%>%filter(time_point >=breaks[i] & time_point < breaks[i+1])%>%mutate(day = i)}
    
    out <- rbind(as.data.frame(indiv), out)}
  return(out)}
##### ----- Function - add number and number_2 column to sort plots later ------
###Here, add a column called number which will be used to order the genotypes in the heat maps
add_number <- function(data_frame){
  ###First, if the genotype is Col0 (only genotype with length 4), assign 0 as number
  ###Else, assign number as genotype with "mpk" removed
  ###Example: mpk1 will be 1, mpk1-17 will be 1-17
  data_frame <- data_frame%>%
    mutate(number = ifelse(genotype != "Col0",(stri_sub(genotype, 4, length(genotype))), 0))
  ###Next, for all double mutants, replace "-" with "0"
  ###Example: 1-17 becomes 1017
  data_frame$number <- as.numeric(gsub("-","0", data_frame$number))
  ###Almost there! There's a problem with two single digit double mutants
  ###We need a four digit number to sort correctly 
  ###Example: mpk1-3 -> 1-3 -> 103, but we need it to be 1003 to sort correctly
  data_frame$number[data_frame$number == "103"] <- "1003"
  data_frame$number[data_frame$number == "506"] <- "5006"
  data_frame$number[data_frame$number == "608"] <- "6008"
  data_frame$number[data_frame$number == "609"] <- "6009"
  ###Convert number to a numberic in order to sort
  data_frame$number <- as.numeric(data_frame$number)
  data_frame <- data_frame%>%arrange(number)
  data_frame <- data_frame%>%mutate(number_2 = number)
  data_frame$number_2[nchar(data_frame$number_2) == 4] <- 0
  return(data_frame)
}
##### ----- Function - shift npq ------
shift_npq <- function(data_frame){
  ###Some npq values are negative
  ###They should all be positive - shift all values by the lowest npq value (Siobhan is looking into this)
  #min_npq<-min((filter(data_frame, measurement == "npq"))$measured_value)
  data_frame$measured_value[data_frame$measurement == "npq"] <- (data_frame$measured_value[data_frame$measurement == "npq"])+abs(min((filter(data_frame, measurement == "npq"))$measured_value))
  return(data_frame)
}

##### ----- Function - prepare data to create plots similar to those on page 370 of cell paper ------
cell_370_data_function <- function(data_frame){
  npq_phi2 <- data_frame%>%
     filter(measurement %in% c("npq","phi2"))%>%
     group_by(genotype, time_point, measurement)%>%
     summarize(med = median(measured_value))
  
  

  ###For each day, we want the minimum, maximum, and center time point for each day for leaf area
  ###If there are an odd number of time points, use the median time point
  ###If there are an even number of time points, instead of finding the average of the two center values, choose the larger value
  #start_mid_end <- unique((data_frame%>%group_by(day)%>%filter(time_point %in% c(min(time_point), max(time_point), ifelse(length(time_point %% 2 == 0), median(time_point[-1]), median(time_point)))))$time_point)
  start_end <- unique((data_frame%>%group_by(day)%>%filter(time_point %in% c(min(time_point), max(time_point))))$time_point)
  
                     
                     
  leaf_area <- data_frame%>%
    filter(measurement == "leafarea")%>%
    filter(time_point %in% start_end)%>%
    group_by(genotype, time_point, measurement)%>%
    summarize(med = median(measured_value))
  
  out <- rbind(npq_phi2, leaf_area)%>%group_by(genotype, time_point, measurement)
  
  
  return(as.data.frame(out))}

##### ----- Prepare data to create plot mirrored after page 371 in the Cell paper ------

cell_371_data_function <- function (data_frame) {
  
  npq_phi2 <- data_frame%>%
    filter(measurement %in% c("npq","phi2"))%>%
    group_by(time_point, measurement)%>%
    mutate_each(funs(./median(.[genotype == "Col0"])), measured_value)%>%
    group_by(time_point, measurement, genotype)%>%
    mutate(log2_fold = log2(median(measured_value)))
  
  #start_mid_end <- unique((data_frame%>%group_by(day)%>%filter(time_point %in% c(min(time_point), max(time_point), ifelse(length(time_point %% 2 == 0), median(time_point[-1]), median(time_point)))))$time_point)
  start_end <- unique((data_frame%>%group_by(day)%>%filter(time_point %in% c(min(time_point), max(time_point))))$time_point)
  
  leaf_area <- data_frame%>%
    filter(measurement == "leafarea")%>%
    filter(time_point %in% start_end)%>%
    group_by(time_point, measurement)%>%
    mutate_each(funs(./median(.[genotype == "Col0"])), measured_value)%>%
    group_by(time_point, measurement, genotype)%>%
    mutate(log2_fold = log2(median(measured_value)))
  
  out <- rbind(npq_phi2, leaf_area)%>%group_by(genotype, time_point, measurement)
  
  return(as.data.frame(out))
}


##### ----- FEB -----
##### ----- FEB Investigate negative npq values ------
ggplot(data = filter(feb_data, measurement == "npq"), aes(x=measured_value))+
  geom_histogram(binwidth = 0.05)+
  labs(title = "Distribution of npq values", x = "NPQ")+
  geom_vline(xintercept = 0, color="red")
ggsave("feb_negative_npq.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")
###What percent of measurements are negative?
nrow(filter(feb_data, measurement == "npq", measured_value <0))/nrow(feb_data)*100
###Shift all of the npq values up by the min value: -.3556
feb_data <- shift_npq(feb_data)
###This is the new distribution of NPQ values:
ggplot(data = filter(feb_data, measurement == "npq"), aes(x=measured_value))+
  geom_histogram(binwidth = 0.01)+
  labs(title = "Distribution of npq values", x = "NPQ")+
  geom_vline(xintercept = 0, color="red")
###Finally, npq values arranged in increasing order, to get an idea of the minimum values
feb_data%>%filter(measurement == "npq")%>%select(measured_value, measurement)%>%arrange(measured_value)

##### ----- FEB Create plot mirrored after page 370 in the Cell paper ------
cell_370_data_feb <- add_day_col(feb_data)
cell_370_data_feb <- cell_370_data_function(cell_370_data_feb)
cell_370_data_feb <- add_number(cell_370_data_feb)
cell_370_data_feb <- add_day_col(cell_370_data_feb)

cell_371_feb <- cell_371_data_function(add_day_col(feb_data))
cell_371_feb <- add_number(cell_371_feb)


##### ----- FEB Verify that the log 2 fold values are correct ------
###Test 1 
a <- filter(feb_data, genotype == "mpk1", time_point == "1", measurement == "npq")$measured_value
b <- filter(feb_data, genotype == "Col0", time_point == "1", measurement == "npq")$measured_value
c <- log2(median(a/median(b)))
filter(cell_371_feb, genotype == "mpk1", time_point == "1", measurement == "npq")$log2_fold
###Test 2 
d <- filter(feb_data, genotype == "mpk6-18", time_point == "273.9997", measurement == "phi2")$measured_value
e <- filter(feb_data, genotype == "Col0", time_point == "273.9997", measurement == "phi2")$measured_value
f <- log2(median(d/median(e)))
filter(cell_371_feb, genotype == "mpk6-18", time_point == "273.9997", measurement == "phi2")$log2

##### ----- FEB Heat map data for all genotypes ------
cell_371_leafarea_feb <- cell_371_feb%>%filter(measurement == "leafarea")%>%arrange(number)
cell_371_npq_feb <- cell_371_feb%>%filter(measurement == "npq")%>%arrange(number)
cell_371_phi2_feb<- cell_371_feb%>%filter(measurement == "phi2")%>%arrange(number)

###Reorder each measurement data set by the number column so Col0 is on top, followed by single, followed by double mutants
cell_371_leafarea_feb$genotype <- reorder(cell_371_leafarea_feb$genotype, cell_371_leafarea_feb$number)
cell_371_npq_feb$genotype <- reorder(cell_371_npq_feb$genotype, cell_371_npq_feb$number)
cell_371_phi2_feb$genotype <- reorder(cell_371_phi2_feb$genotype, cell_371_phi2_feb$number)

##### ----- FEB Phi2 heat map - all genotypes ------
ggplot(data = cell_371_phi2_feb, aes(x = time_point, y = genotype, fill = log2_fold)) + 
  labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = "February: Phi2 Log 2 Fold Change")+
  #geom_tile(width = 10 , height = 20)+
  geom_tile(width = 10, height = 10)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
               base_size = 20)+
  # theme(strip.background.y = element_blank(),
  #       strip.text.y = element_blank(),
  #       panel.spacing=unit(0, "lines"))+
  # 
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        panel.spacing=unit(0, "lines"))+
  #scale_fill_manual(values = )
  scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))
ggsave("feb_phi2_heatmap.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")

##### ----- FEB Leaf area heat map - all genotypes ------

###Confirm that each day has two "cells" - this is because we selected only start and end points for each day
ggplot(data = cell_371_leafarea_feb, aes(x = time_point, y = genotype, fill = log2_fold)) + 
  labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = "February: Leaf Area Log 2 Fold Change")+
  geom_tile(width = 16 , height = 30)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  #scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  # theme(strip.background.y = element_blank(),
  #       strip.text.y = element_blank(),
  #       panel.spacing=unit(0, "lines"))+
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        panel.spacing=unit(0, "lines"))+
  scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))
ggsave("feb_leafarea_heatmap.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")

##### ----- FEB NPQ heat map - all genotypes ------

ggplot(data = cell_371_npq_feb, aes(x = time_point, y = genotype, fill = log2_fold)) + 
  labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = "February: NPQ Log 2 Fold Change")+
  geom_tile(width = 10 , height = 20)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  # theme(strip.background.y = element_blank(),
  #       strip.text.y = element_blank(),
  #       panel.spacing=unit(0, "lines"))+
  
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        panel.spacing=unit(0, "lines"))+
  scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))
ggsave("feb_npq_heatmap.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")

##### ----- FEB Loop to create plots for all combinations of single/double mutants - Cell 370 ------

genotype_combinations <- list(c("mpk1-17", "mpk1", "mpk17"), c("mpk1-16", "mpk1", "mpk16"), c("mpk6-9", "mpk6", "mpk9"),
                              c("mpk17-20","mpk17", "mpk20"), c("mpk14-17", "mpk14", "mpk17"), c("mpk8-17", "mpk8","mpk17"),
                              c("mpk8-20","mpk8","mpk20"), c("mpk6-18", "mpk6", "mpk18"), c("mpk1-13", "mpk1", "mpk13"), c("mpk17-20", "mpk17", "mpk20"), c("mpk13-20", "mpk13", "mpk20"), c("mpk6-8", "mpk6", "mpk8"), c("mpk9-18", "mpk9", "mpk18"),
                              c("mpk6-20", "mpk6", "mpk20"), c("mpk14-16", "mpk14", "mpk16"), c("mpk18-20", "mpk18", "mpk20"), c("mpk5-6", "mpk5", "mpk6"), c("mpk14-18", "mpk14", "mpk18"), c("mpk5-6", "mpk5", "mpk6"), c("mpk14-18", "mpk14", "mpk18"), c("mpk5-17", "mpk5", "mpk17"),
                              c("mpk1-3", "mpk1", "mpk3"), c("mpk1-17", "mpk1", "mpk17"), c("mpk3-16", "mpk3", "mpk16"), c("mpk9-16", "mpk9", "mpk16"), c("mpk14-20", "mpk14", "mpk20"))
for (element in genotype_combinations){
  plot <- ggplot(data = filter(cell_370_data_feb, genotype %in% c(element, "Col0")), aes(x = time_point, y = median))+
    geom_line(aes(color = genotype), size = 1)+
    facet_rep_grid(measurement ~ day, scales = "free" , switch = "y", repeat.tick.labels = FALSE)+
    labs(x = "Hours", y = NULL)+
    theme_tufte(base_family = "Calibri",
                base_size = 18)+
    theme(strip.background.x = element_blank(),
          panel.border = element_rect(color = "black", fill = NA, size = 1),
          axis.line=element_line(),
          panel.spacing = unit(1, "lines"))+
    scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
    scale_color_viridis_d(begin = 0, end = 1, option = 'viridis', aesthetics = c("colour", "fill"))
  ggsave(plot, filename=paste("feb_cell_370_",element[1],".png",sep=""), scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")
  
}


##### ----- FEB Loop to create plots for all combinations of single/double mutants - Cell 371 ------
for (element in genotype_combinations){
  for (m in c("npq", "leafarea", "phi2")){
    data <- filter(cell_371_feb, genotype %in% element, measurement == m)
    data$genotype <- reorder(data$genotype, data$number_2)
    plot <- ggplot(data = data, aes(x = time_point, y = genotype, fill = log2_fold)) + 
      labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = paste("February:", m, "Log 2 Fold Change"))+
      geom_tile(width = ifelse(m == "leafarea", 16, 10) , height = 30)+
      facet_grid(genotype ~ day, scales = "free", switch = "y")+
      #scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
      theme_tufte(base_family = "Calibri",
                  base_size = 20)+
      # theme(strip.background.y = element_blank(),
      #       strip.text.y = element_blank(),
      #       panel.spacing=unit(0, "lines"))+
      theme(strip.background.y = element_blank(),
            strip.text.y = element_blank(),
            axis.title.x=element_blank(),
            axis.text.x=element_blank(),
            axis.ticks.x=element_blank(),
            panel.spacing=unit(0, "lines"))+
      scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))
    ggsave(plot, filename=paste("feb_cell_371_",element[1],"_", m ,".png",sep=""), scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")
    
  }
}

##### ----- DEC ------
##### ----- DEC Investigate negative npq values ------
ggplot(data = filter(dec_data, measurement == "npq"), aes(x=measured_value))+
  geom_histogram(binwidth = 0.05)+
  labs(title = "Distribution of npq values", x = "NPQ")+
  geom_vline(xintercept = 0, color="red")
ggsave("dec_negative_npq.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")
###What percent of measurements are negative?
nrow(filter(dec_data, measurement == "npq", measured_value <0))/nrow(feb_data)*100
###Shift all of the npq values up by the min value: -.3556
dec_data <- shift_npq(dec_data)
###This is the new distribution of NPQ values:
ggplot(data = filter(dec_data, measurement == "npq"), aes(x=measured_value))+
  geom_histogram(binwidth = 0.01)+
  labs(title = "Distribution of npq values", x = "NPQ")+
  geom_vline(xintercept = 0, color="red")
###Finally, npq values arranged in increasing order, to get an idea of the minimum values
dec_data%>%filter(measurement == "npq")%>%select(measured_value, measurement)%>%arrange(measured_value)

###Some Phi2 values are negative in the December data set, and some are NA!!
ggplot(data = filter(dec_data, measurement == "phi2"), aes(x=measured_value))+
  geom_histogram(binwidth = 0.05)+
  labs(title = "Distribution of phi2 values", x = "Phi2")+
  geom_vline(xintercept = 0, color="red")
ggsave("dec_negative_phi2.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")
###What percent of measurements are negative?
nrow(filter(dec_data, measurement == "phi2", measured_value <0))/nrow(dec_data)*100
###Shift all of the phi2 values up by the min value: -.1049

###Here are the rows with NA for a measured value:
dec_data[which(is.na(dec_data$measured_value)),]
###Remove these rows:
dec_data <- na.omit(dec_data)
###Now, shift all phi2 values by the minimum
dec_data$measured_value[dec_data$measurement == "phi2"] <- (dec_data$measured_value[dec_data$measurement == "phi2"])+abs(min((filter(dec_data, measurement == "phi2"))$measured_value))




cell_370_data_dec <- add_day_col(dec_data)
cell_370_data_dec <- cell_370_data_function(cell_370_data_dec)
cell_370_data_dec <- add_number(cell_370_data_dec)
cell_370_data_dec <- add_day_col(cell_370_data_dec)

cell_371_dec <- cell_371_data_function(add_day_col(dec_data))
cell_371_dec <- add_number(cell_371_dec)

##### ----- DEC verify that the log 2 fold values are correct ------

###Test 1 
a <- filter(dec_data, genotype == "mpk1", time_point == "1", measurement == "npq")$measured_value
b <- filter(dec_data, genotype == "Col0", time_point == "1", measurement == "npq")$measured_value
c <- log2(median(a/median(b)))
filter(cell_371_dec, genotype == "mpk1", time_point == "1", measurement == "npq")$log2_fold
###Test 2 
d <- filter(dec_data, genotype == "mpk6-18", time_point == "0", measurement == "phi2")$measured_value
e <- filter(dec_data, genotype == "Col0", time_point == "0", measurement == "phi2")$measured_value
f <- log2(median(d/median(e)))
filter(cell_371_dec, genotype == "mpk6-18", time_point == "0", measurement == "phi2")$log2

##### ----- DEC Heat map data for all genotypes ------

cell_371_leafarea_dec <- cell_371_dec%>%filter(measurement == "leafarea")%>%arrange(number)
cell_371_npq_dec <- cell_371_dec%>%filter(measurement == "npq")%>%arrange(number)
cell_371_phi2_dec<- cell_371_dec%>%filter(measurement == "phi2")%>%arrange(number)

###Reorder each measurement data set by the number column so Col0 is on top, followed by single, followed by double mutants
cell_371_leafarea_dec$genotype <- reorder(cell_371_leafarea_dec$genotype, cell_371_leafarea_dec$number)
cell_371_npq_dec$genotype <- reorder(cell_371_npq_dec$genotype, cell_371_npq_dec$number)
cell_371_phi2_dec$genotype <- reorder(cell_371_phi2_dec$genotype, cell_371_phi2_dec$number)

##### ----- DEC Phi2 heat map - all genotypes ------

ggplot(data = cell_371_phi2_dec, aes(x = time_point, y = genotype, fill = log2_fold)) + 
  labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = "December: Phi2 Log 2 Fold Change")+
  geom_tile(width = 10 , height = 20)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  # theme(strip.background.y = element_blank(),
  #       strip.text.y = element_blank(),
  #       panel.spacing=unit(0, "lines"))+
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        panel.spacing=unit(0, "lines"))+
  scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))
ggsave("dec_phi2_heatmap.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")

##### ----- DEC Leaf area heat map - all genotypes ------

###Confirm that each day has three "cells" - this is because we selected only start, middle, and end points for each day
ggplot(data = cell_371_leafarea_dec, aes(x = time_point, y = genotype, fill = log2_fold)) + 
  labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = "December: Leaf Area Log 2 Fold Change")+
  geom_tile(width = 16 , height = 20)+
  #geom_tile()+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  #scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  # theme(strip.background.y = element_blank(),
  #       strip.text.y = element_blank(),
  #       panel.spacing=unit(0, "lines"))+
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        panel.spacing=unit(0, "lines"))+
  scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))
ggsave("dec_leafarea_heatmap.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")


##### ----- DEC NPQ heat map - all genotypes ------

ggplot(data = cell_371_npq_dec, aes(x = time_point, y = genotype, fill = log2_fold)) + 
  labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = "December: NPQ Log 2 Fold Change")+
  geom_tile(width = 10 , height = 20)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  # theme(strip.background.y = element_blank(),
  #       strip.text.y = element_blank(),
  #       panel.spacing=unit(0, "lines"))+
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        panel.spacing=unit(0, "lines"))+
  scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))
ggsave("dec_npq_heatmap.png", scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")

##### ----- DEC Loop to create plots for all combinations of single/double mutants - Cell 370 ------

genotype_combinations <- list(c("mpk1-17", "mpk1", "mpk17"), c("mpk1-16", "mpk1", "mpk16"), c("mpk6-9", "mpk6", "mpk9"),
                              c("mpk17-20","mpk17", "mpk20"), c("mpk14-17", "mpk14", "mpk17"), c("mpk8-17", "mpk8","mpk17"),
                              c("mpk8-20","mpk8","mpk20"), c("mpk6-18", "mpk6", "mpk18"), c("mpk1-13", "mpk1", "mpk13"), c("mpk17-20", "mpk17", "mpk20"), c("mpk13-20", "mpk13", "mpk20"), c("mpk6-8", "mpk6", "mpk8"), c("mpk9-18", "mpk9", "mpk18"),
                              c("mpk6-20", "mpk6", "mpk20"), c("mpk14-16", "mpk14", "mpk16"), c("mpk18-20", "mpk18", "mpk20"), c("mpk5-6", "mpk5", "mpk6"), c("mpk14-18", "mpk14", "mpk18"), c("mpk5-6", "mpk5", "mpk6"), c("mpk14-18", "mpk14", "mpk18"), c("mpk5-17", "mpk5", "mpk17"),
                              c("mpk1-3", "mpk1", "mpk3"), c("mpk1-17", "mpk1", "mpk17"), c("mpk3-16", "mpk3", "mpk16"), c("mpk9-16", "mpk9", "mpk16"), c("mpk14-20", "mpk14", "mpk20"))
for (element in genotype_combinations){
  plot <- ggplot(data = filter(cell_370_data_dec, genotype %in% c(element, "Col0")), aes(x = time_point, y = med))+
    geom_line(aes(color = genotype), size = 1)+
    facet_rep_grid(measurement ~ day, scales = "free" , switch = "y", repeat.tick.labels = FALSE)+
    labs(x = "Hours", y = NULL)+
    theme_tufte(base_family = "Calibri",
                base_size = 18)+
    theme(strip.background.x = element_blank(),
          panel.border = element_rect(color = "black", fill = NA, size = 1),
          axis.line=element_line(),
          panel.spacing = unit(1, "lines"))+
    scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
    scale_color_viridis_d(begin = 0, end = 1, option = 'viridis', aesthetics = c("colour", "fill"))
  ggsave(plot, filename=paste("dec_cell_370_",element[1],".png",sep=""), scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")
  
}

##### ----- INVESTIGATE why Dec looks different from Feb for NPQ values ------

investigate_feb <- add_day_col(shift_npq(feb_data))%>%
  filter(genotype == "Col0", measurement == "npq", day == "3")%>%
  group_by(time_point)%>%
  summarize(median_npq = median(measured_value))
investigate_dec <- add_day_col(shift_npq(dec_data))%>%
  filter(genotype == "Col0", measurement == "npq", day == "3")%>%
  group_by(time_point)%>%
  summarize(median_npq = median(measured_value))
investigate_dec_phi2 <- add_day_col(shift_npq(dec_data))%>%
  filter(genotype == "Col0", measurement == "phi2", day == "3")%>%
  group_by(time_point)%>%
  summarize(median_npq = median(measured_value))
###Problems: Dec data was recorded every hour, but Feb data was recorded 4 times an hour

nrow(investigate_feb)
nrow(investigate_dec)
nrow(investigate_dec)
###On day 3, Feb has 64 times where observations were made, but Dec only has 16

dec_measurement_summary <- add_day_col(shift_npq(dec_data))%>%
  filter(measurement !="leafarea")%>%
  group_by(measurement, day)%>%
  summarize(measurements = length(unique(time_point)))

feb_measurement_summary <- add_day_col(shift_npq(feb_data))%>%
  filter(measurement !="leafarea")%>%
  group_by(measurement, day)%>%
  summarize(measurements = length(unique(time_point)))

###Talk to Melissa about this!!!


##### ----- DEC Loop to create plots for all combinations of single/double mutants - Cell 371 -----
for (element in genotype_combinations){
  for (m in c("npq", "leafarea", "phi2")){
    data <- filter(cell_371_dec, genotype %in% element, measurement == m)
    data$genotype <- reorder(data$genotype, data$number_2)
    plot <- ggplot(data = data, aes(x = time_point, y = genotype, fill = log2_fold)) + 
      labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = paste("December:", m, "Log 2 Fold Change"))+
      geom_tile(width = ifelse(m == "leafarea", 16, 10) , height = 30)+
      facet_grid(genotype ~ day, scales = "free", switch = "y")+
      #scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
      theme_tufte(base_family = "Calibri",
                  base_size = 20)+
      # theme(strip.background.y = element_blank(),
      #       strip.text.y = element_blank(),
      #       panel.spacing=unit(0, "lines"))+
      theme(strip.background.y = element_blank(),
            strip.text.y = element_blank(),
            axis.title.x=element_blank(),
            axis.text.x=element_blank(),
            axis.ticks.x=element_blank(),
            panel.spacing=unit(0, "lines"))+
      scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))
    ggsave(plot, filename=paste("dec_cell_371_",element[1],"_", m ,".png",sep=""), scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations")
  }}
##### -----ALL Violin Plots ------

###Add "month" column to the DEPI subset - save as "depi_month"
depi_month <- shift_npq(add_day_col(depi_subset%>%
  mutate(month = (ifelse(substr(plant_ID, 1,4) == "0218", "Feb", "Dec")))))

test <- depi_month%>%
  filter(genotype %in% c("mpk1", "Col0"), day == "3")



for (g in unique(filter(depi_month, genotype != "Col0")$genotype)){
  for (d in c(1:7)){
    data <- filter(depi_month, genotype %in% c("Col0", g), day == d)
    plot <- ggplot(data = data, aes(x = genotype, y = measured_value, color = genotype))+
      geom_violin(adjust = 1)+
      geom_boxplot(width=0.1, alpha=0.2) +
      facet_grid(measurement~month+genotype, scales = "free", switch = "y")+
      labs(title = "Day 3: Mpk1 and Col0")+
      labs(title = paste("Day ", d, ": ", g," and Col0", sep=""))+
      theme_tufte(base_family = "Calibri",
                  base_size = 20)+
      theme(axis.title.y=element_blank(),
          axis.title.x=element_blank(),
          axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          panel.border = element_rect(color="black", fill=NA),
          plot.title = element_text(hjust = 0.5))
    ggsave(plot, filename=paste("violin_plot_",g,"_", d ,".png",sep=""), scale = 2, path = "C:/Users/Joan Seeger/Documents/Shiu Lab - R/Current/Visualizations/Violin Plots")
  }} 

  # theme(strip.background.y = element_blank(),
  #       strip.text.y = element_blank(),
  #       axis.title.x=element_blank(),
  #       axis.text.x=element_blank(),
  #       axis.ticks.x=element_blank(),
  #       panel.spacing=unit(0, "lines"))

##### ----- Everything below needs to be organized!!! ------

##### ----- Number of plants in each genotype in each flat ------
plants_per_flat <- feb_data%>%
  filter(time_point == "0")%>%
  group_by(genotype, flat_number)%>%
  summarize(count = n())
plants_per_flat
hist(plants_per_flat$count)

plants_per_genotype <- feb_data%>%
  filter(time_point == "0")%>%
  group_by(genotype, measurement)%>%
  summarize(count = n())
plants_per_genotype


##### ----- Calculations and plots for 5-22 lab meeting -----

wt_subset <- sort(filter(feb_data, genotype == "Col0", measurement == "npq", time_point == "0")$measured_value)
mpk1_subset <- sort(filter(feb_data, genotype == "mpk1", measurement == "npq", time_point == "0")$measured_value)/med_test
median_wt = median(sort(filter(feb_data, genotype == "Col0", measurement == "npq", time_point == "0")$measured_value)
)

wt_plot<- feb_data%>%
  filter(genotype == "Col0", measurement == "npq")%>%
  group_by(genotype, time_point, measurement, day)%>%
  summarize(median = median(measured_value))


ggplot(data = wt_plot, aes(x = time_point, y = median))+
  geom_line(aes(color = genotype), size = 1)+
  facet_rep_grid(measurement ~ day, scales = "free" , switch = "y", repeat.tick.labels = FALSE)+
  #geom_ribbon(aes(ymin=CI_lower, ymax=CI_upper, fill = genotype), alpha=0.2)+
  labs(x = "Hours", y = NULL)+
  theme_tufte(base_family = "Calibri",
              base_size = 18)+
  theme(strip.background.x = element_blank(),
        panel.border = element_rect(color = "black", fill = NA, size = 1),
        axis.line=element_line(),
        panel.spacing = unit(1, "lines"))+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  scale_color_viridis_d(begin = 0, end = 1, option = 'viridis', aesthetics = c("colour", "fill"))

mpk1_example <- filter(cell_371_data, genotype =="mpk1", measurement == "npq")
mpk1_example$genotype <- reorder(data$genotype, data$number_2)
ggplot(data = mpk1_example, aes(x = time_point, y = genotype, fill = log2_fold)) +
  labs(fill = "Log 2 Fold Change", x = "Hours", y = NULL, title = paste("NPQ Log 2 Fold Change"))+
  geom_tile(width = 10 , height = 20)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        panel.spacing=unit(0, "lines"))+
  scale_fill_gradient2(low = "blue", high="red", mid = "white", midpoint = 0, limits = c(-.65, .65), breaks = c(-.65, 0, .65), labels = c("-0.65", "0", "0.65"))


