#############################
# Load necessary packages
#############################
library(dplyr)
library(tidyverse)
library(ggplot2)
library(lemon)
library(data.table)
library(ggthemes)
library(extrafont)
library(Routliers)

#############################
# Load in the data
#############################
depi_data <-read.table("DEPI_analysis_Seeger.txt", sep = ",", header = FALSE)
names(depi_data) <- c("individual_plant_metadata", "genotype", "line", "subline", "border", "flat_number", "measurement_ID", "plant_ID", "measurement", "time_point", "measured_value")
depi_data$time_point <- as.numeric(gsub("X","", depi_data$time_point))
depi_subset <- depi_data%>%filter(!genotype %in% c("b1", "b3", "b1b3", "ftsz2-1", "ftsz2-2", "ftsz-dbl", "Col0" )|(genotype == "Col0"&subline == "1"))
levels(depi_subset$measurement)[levels(depi_subset$measurement)=="size"] <- "leafarea"
levels(depi_subset$measurement)[levels(depi_subset$measurement)=="growth"] <- "leafarea"
feb_data <- filter(depi_subset, substr(plant_ID, 1,4) == "0218", border == FALSE)
dec_data <- filter(depi_subset, substr(plant_ID, 1,4) == "1217", border == FALSE)
feb_data <- feb_data%>%mutate(day = case_when(
  between(time_point,0,20) ~ 1,
  between(time_point,20,42)~2,
  between(time_point,42,68)~3,
  between(time_point,68,90)~4,
  between(time_point,90,115)~5,
  between(time_point,115,140)~6,
  between(time_point,140,162)~7,
  between(time_point,162,185)~8,
  between(time_point,185,212)~9,
  between(time_point,212,235)~10,
  between(time_point,235,260)~11,
  between(time_point,260,300)~12
))
min_npq<-min((filter(feb_data, measurement == "npq"))$measured_value)
feb_data$measured_value[feb_data$measurement == "npq"] <- (feb_data$measured_value[feb_data$measurement == "npq"])+abs(min_npq)
#############################
# Use this to replace outliers with NA 
#############################
remove_outliers <- feb_data%>%
  filter(border == FALSE)%>%
  group_by(genotype, measurement, time_point)%>%
  mutate(measured_value = replace(measured_value, outliers_mad(measured_value, b=1.4826, threshold=3.5, na.rm=TRUE)$outliers_pos, NA))%>%
  arrange(genotype, measurement, time_point)
###############################################
# Beginning investigations for comparisions to WT
###############################################
p_value = data.frame()
for (i in unique(feb_data$genotype)){
  try_this <- feb_data%>% 
    group_by(time_point, measurement)%>%
    mutate(n_genotype = length(measured_value[genotype == i]), n_wt = length(measured_value[genotype =="Col0"]))%>%
    mutate(p = (wilcox.test(measured_value[genotype == i], measured_value[genotype == "Col0"], exact = FALSE))$p.value)%>%
    mutate(genotype = i)%>%
    select(time_point, genotype, measurement, day, p, n_wt, n_genotype)
  p_value = rbind(as.data.frame(try_this), p_value)}

p_value <- p_value%>%
  distinct()%>%
  mutate(p_adj = p.adjust(p, method = "fdr"))%>%
  mutate(effect = abs(qnorm(p_adj))/sqrt(n_wt+n_genotype))%>%
  mutate(effect_size = case_when(
    (effect <0.2)~"small",
    (effect>0.2 & effect < 0.5)~"medium",
    (effect>0.5)~"large"))

p_value = gather(p_value, type, p, p, p_adj)%>%arrange(genotype, time_point)
length(which(p_value$effect==Inf))
###Inf value makes sense, because qnorm 1 is infinity
###We have qnorm values equal to one whenever we have Col0




ggplot(p_value, aes(x=p, color=type)) +
  geom_histogram(fill="white", alpha=1, position="identity", size = 2)+
  geom_vline(xintercept=0.05, color = "red", size = 1.5)+
  theme_igray(base_family = "Calibri",
              base_size = 20)+
  labs(title = "P-Value with FDR Correction, without grouping")+
  geom_text(aes(x = 0.13, label = "p=0.05", y =  30000), color = "red", size = 8)

p_value%>%group_by(type)%>%summarize(p_lessthan_0.05 = sum(p<0.05), p_0.05_0.1 = sum(0.05<p & p<0.1), p_0.1_0.2 = sum(0.1<p & p<0.2))
###Something looks off with this correction
###Try grouping by time before finding FDR correction

try_again = data.frame()
for (i in unique(feb_data$genotype)){
  try_this <- feb_data%>%
  group_by(time_point, measurement)%>%
    mutate(n_genotype = length(measured_value[genotype == i]), n_wt = length(measured_value[genotype =="Col0"]))%>%
    mutate(p = (wilcox.test(measured_value[genotype == i], measured_value[genotype == "Col0"], exact = FALSE))$p.value)%>%
    mutate(genotype = i)%>%
    select(time_point, genotype, measurement, day, p, n_wt, n_genotype)
  try_again = rbind(as.data.frame(try_this), try_again)}
# try_again = try_again%>%distinct()
# try_again = try_again%>%group_by(time_point, measurement)%>%mutate(p_adj = p.adjust(p, method = "fdr"))%>%ungroup()

try_again <- try_again%>%
  distinct()%>%
  group_by(time_point, measurement)%>%
  mutate(p_adj = p.adjust(p, method = "fdr"))%>%
  mutate(effect = abs(qnorm(p_adj))/sqrt(n_wt+n_genotype))%>%
  mutate(effect_size = case_when(
    (effect <0.2)~"small",
    (effect>0.2 & effect < 0.5)~"medium",
    (effect>0.5)~"large"))
try_again <- gather(try_again, type, p, p, p_adj)%>%arrange(genotype, time_point)

ggplot(try_again, aes(x=p, color=type)) +
  geom_histogram(fill="white", alpha=1, position="identity", size = 2)+
  geom_vline(xintercept=0.05, color = "red", size = 1.5)+
  theme_igray(base_family = "Calibri",
              base_size = 15)+
  labs(title = "P-Value with FDR Correction, grouped by time point and measurement type")+
  geom_text(aes(x = 0.13, label = "p=0.05", y =  5000), color = "red", size = 8)

try_again%>%group_by(type)%>%summarize(p_lessthan_0.05 = sum(p<0.05), p_0.05_0.1 = sum(0.05<p & p<0.1), p_0.1_0.2 = sum(0.1<p & p<0.2))



npq_p <- filter(try_again, measurement == "npq", type == "p_adj")
leafarea_p <- filter(try_again, measurement == "leafarea", type == "p_adj")
phi2_p <- filter(try_again, measurement == "phi2", type == "p_adj")
################################################
# P-Value: NPQ
################################################
ggplot(data = npq_p, aes(x = time_point, y = genotype, fill = p)) + 
  labs(fill = "P-Value, \n with FDR Correction", x = "Hours", y = NULL, title = "P-Value for NPQ using a Wilcox Test")+
  geom_tile(width = 10 , height = 20)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        panel.spacing=unit(0, "lines"))+
 # scale_fill_gradient2(low = "red", high="white", midpoint = 0.5)
  scale_fill_gradient(trans = "log", low = "green", high = "black", breaks = c(0, 0.001, 0.05, 0.5))
################################################
# P-Value: Leaf Area
################################################
ggplot(data = leafarea_p, aes(x = time_point, y = genotype, fill = p)) + 
  labs(fill = "P-Value, \n with FDR Correction", x = "Hours", y = NULL, title = "P-Value for Leaf Area using a Wilcox Test")+
  geom_tile(width = 10 , height = 20)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        panel.spacing=unit(0, "lines"))+
  scale_fill_gradient(trans = "log", low = "green", high = "black", breaks = c(0.05, 0.5))
################################################
# P-Value: Phi2
################################################
ggplot(data = phi2_p, aes(x = time_point, y = genotype, fill = p)) + 
  labs(fill = "P-Value, \n with FDR Correction", x = "Hours", y = NULL, title = "P-Value for Phi2 using a Wilcox Test")+
  geom_tile(width = 10 , height = 20)+
  facet_grid(genotype ~ day, scales = "free", switch = "y")+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  theme_tufte(base_family = "Calibri",
              base_size = 20)+
  theme(strip.background.y = element_blank(),
        strip.text.y = element_blank(),
        panel.spacing=unit(0, "lines"))+
  # scale_fill_gradient2(low = "red", high="white", midpoint = 0.5)
  scale_fill_gradient(trans = "log", low = "green", high = "black", breaks = c(0, 0.001, 0.05, 0.5))

###I think this works!!!
filter(p_value, genotype == "mpk1", time_point == "1", measurement == "npq")$p
a <- filter(feb_data, genotype == "mpk1", time_point == "1", measurement == "npq")$measured_value
b <- filter(feb_data, genotype == "Col0", time_point == "1", measurement == "npq")$measured_value
wilcox.test(a, b, exact = FALSE)$p.value
filter(p_value, genotype == "mpk14-17", time_point == "266.9997", measurement == "leafarea")$p
c <- filter(feb_data, genotype == "mpk14-17", time_point == "266.9997", measurement == "leafarea")$measured_value
d <- filter(feb_data, genotype == "Col0", time_point == "266.9997", measurement == "leafarea")$measured_value
wilcox.test(c,d, exact = FALSE)$p.value
filter(p_value, genotype == "mpk13", time_point == "38.0003", measurement == "phi2")$p
e <- filter(feb_data, genotype == "mpk13", time_point == "38.0003", measurement == "phi2")$measured_value
f <- filter(feb_data, genotype == "Col0", time_point == "38.0003", measurement == "phi2")$measured_value
wilcox.test(e,f, exact = FALSE)$p.value

#write.csv(p_value,'p_value.csv')
p_test <- filter(p_value, genotype %in% c("mpk1", "mpk17", "mpk1-17", "Col0"))
ggplot(data = p_test, aes(x = time_point, y = p))+
  geom_line(aes(color = genotype), size = 1)+
  facet_rep_grid(measurement ~ day, scales = "free" , switch = "y", repeat.tick.labels = FALSE)+
  labs(x = "Hours", y = NULL)+
  theme_tufte(base_family = "Calibri",
              base_size = 18)+
  theme(strip.background.x = element_blank(),
        panel.border = element_rect(color = "black", fill = NA, size = 1),
        axis.line=element_line(),
        panel.spacing = unit(1, "lines"))+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  scale_color_viridis_d(begin = 0, end = 1, option = 'viridis', aesthetics = c("colour", "fill"))+
  geom_hline(yintercept=0.05, color = "red", size = 1.5)

p_test_2 <- filter(p_value, genotype %in% c("mpk9", "mpk18", "mpk9-18", "Col0"))
ggplot(data = p_test_2, aes(x = time_point, y = p))+
  geom_line(aes(color = genotype), size = 1)+
  facet_rep_grid(measurement ~ day, scales = "free" , switch = "y", repeat.tick.labels = FALSE)+
  labs(x = "Hours", y = NULL)+
  theme_tufte(base_family = "Calibri",
              base_size = 18)+
  theme(strip.background.x = element_blank(),
        panel.border = element_rect(color = "black", fill = NA, size = 1),
        axis.line=element_line(),
        panel.spacing = unit(1, "lines"))+
  scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
  scale_color_viridis_d(begin = 0, end = 1, option = 'viridis', aesthetics = c("colour", "fill"))+
  geom_hline(yintercept=0.05, color = "red", size = 1.5)


for (element in genotype_combinations){
  data <- filter(p_value, genotype %in% element)
  plot <- ggplot(data = data, aes(x = time_point, y = p))+
    geom_line(aes(color = genotype), size = 1)+
    facet_rep_grid(measurement ~ day, scales = "free" , switch = "y", repeat.tick.labels = FALSE)+
    labs(x = "Hours", y = NULL)+
    theme_tufte(base_family = "Calibri",
                base_size = 18)+
    theme(strip.background.x = element_blank(),
          panel.border = element_rect(color = "black", fill = NA, size = 1),
          axis.line=element_line(),
          panel.spacing = unit(1, "lines"))+
    scale_x_continuous(breaks = round(c(0,15,24,39.5,48,63.7,72,87,96,112,120,135,144,159,168,183,192,207,216,231,240,255,264,279),0))+
    scale_color_viridis_d(begin = 0, end = 1, option = 'viridis', aesthetics = c("colour", "fill"))+
    geom_hline(yintercept=0.05, color = "red", size = 1.5)
  print(plot)
}

###Summary stats for the p values for each measurement
try_again%>%filter(type == "p_adj")%>%group_by(measurement)%>%summarize(median = median(p), min = min(p), max = max(p))

ggplot(try_again)+
  geom_bar(aes(x=effect_size))

hist(try_again$effect)

