"0","p_value <- function (data_frame){"
"0","  ###Initialize an empty data frame"
"0","  out = data.frame()"
"0","  ###For each genotype:"
"0","  for (i in unique(filter(data_frame, genotype != ""Col0"")$genotype)){"
"0","    ###We don't want to make comparisons of WT to itself - this could impact FDR correction"
"0","    indiv_data <- data_frame%>% "
"0","      ###Focus on each time point and measurement"
"0","      group_by(time_point, measurement)%>%"
"0","      ###Create a column with the number of WT individual plants and the number of plants for each genotype"
"0","      ###Use this later to calculate effect size"
"0","      mutate(n_genotype = length(measured_value[genotype == i]), n_wt = length(measured_value[genotype ==""Col0""]))%>%"
"0","      ###Create a column of p-values using a nonparametric Wilcox test"
"0","      "
"0","      ###Default set to exact = TRUE, because our sample sizes are too small to use a normal approximation"
"0","      ###But, when there are ties in the values (i.e. one value appears twice in the ranking process), wilcox.test returns to the normal approximation and spits out a warning message"
"0","      ###This may be a problem - include correct = FALSE to stop this from happening "
"0","      "
"0","      ###More information:"
"0","      ###http://courses.atlas.illinois.edu/spring2016/STAT/STAT200/RProgramming/NonParametricStats.html"
"0","      ###https://data.library.virginia.edu/the-wilcoxon-rank-sum-test/"
"0","      "
"0","      ###Paired = FALSE, because the Col0 plants are independet from each genotype"
"0","      ###Correct = FALSE turns off the continuity correction"
"0","      mutate(p = (wilcox.test(measured_value[genotype == i], measured_value[genotype == ""Col0""], correct = FALSE, paired = FALSE))$p.value)%>%"
"0","  "
"0","      ###Add a column with each genotype"
"0","      mutate(genotype = i)%>%"
"0","      # mutate(number = unique(filter(feb_data, genotype == i)$number))%>%"
"0","      # mutate(number_2 = unique(filter(feb_data, genotype == i)$number_2))%>%"
"0","      # "
"0","      select(time_point, genotype, measurement, day, p, n_wt, n_genotype)"
"0","  "
"0","      "
"0","    ###Add individual information to the main data frame"
"0","    out <- rbind(as.data.frame(indiv_data), out)}"
"0","  return(out)}"
